#------------------------------------------------------------------------------------------ 
#                                   Exceptions
#------------------------------------------------------------------------------------------ 

"""

try: выполняется всегда 
except: выполняется, если возникла ошибка
else: выполняется, если try выполнился без ошибок
finally: выполняется всегда

"""

#------------------------------------------------------------------------------------------ 
#                               Можно ли использовать несколько extept
#------------------------------------------------------------------------------------------ 

"""
Да, использовать можно, будут выполняться в порядке их очерёдности. 
Ошибка будет сравниваться с типом ошибки, который указан в Except.
Если except подходит, то выполняется соответствующий блок кода

"""

#------------------------------------------------------------------------------------------ 
#                 Можно ли одним блоком except ловить несколько типов исключений? 
#------------------------------------------------------------------------------------------ 

"""
Да. Нужно в except перечислить все ожидаемые типы ошибок.
Если указанная ошибка появится, то она будет обработана.

"""

try:
    raise ValueError(1)
except(ValueError, TypeError):
    print("Value or TypeError")


#------------------------------------------------------------------------------------------ 
#                 Разница между except и except Exception 
#------------------------------------------------------------------------------------------

"""
except Exception - это общий обработчик исключений
except - конкретный, где мы указываем ожидаемые эксшепшены для обработки

"""

try:
    raise ValueError
except Exception:
    print("Exception")
except:
    print("Base Exception")     


#------------------------------------------------------------------------------------------ 
#                       Как переподнять исключение в блоке except (reraise exception) 
#------------------------------------------------------------------------------------------

try:
    try:
        raise ValueError(1)
    except Exception:
        print("INNER")
        raise # - чтобы внешний блок try поймал ошибку, нужно написать raise, иначе ошибка не дойдет до финального except
except Exception:
    print("OUTER")

#------------------------------------------------------------------------------------------ 
#                                       ExceptionGroup 
#------------------------------------------------------------------------------------------ 
try:
    eg = ExceptionGroup(
        "Name of group", [
            TypeError(1),
            ValueError(2),
            ]
    )
    raise eg
except ExceptionGroup as e:
    print(e)   

#------------------------------------------------------------------------------------------ 
#                                       В чем разница между except и except*? 
#------------------------------------------------------------------------------------------ 
"""
except* - появился в python 3.11
облегчает работу с ExceptionGroup.
"""
try:
    eg = ExceptionGroup(
        "Name of group", [
            TypeError(1),
            ValueError(2),
            ]
    )
    raise eg
except* TypeError as e:
    print("TypeError:", e)
except* ValueError as e:
    print("ValueError:", e)

#------------------------------------------------------------------------------------------ 
#                              Как создать свой тип исключения?
#                              Зачем это может потребоваться? 
#------------------------------------------------------------------------------------------ 

class CustomEx(Exception):
    def __init__(self, value, message="Default msg") -> None:
       self.value = value
       self.message = message
       super().__init__(self.message) 
raise CustomEx("Some")